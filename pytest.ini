[pytest]
# pytest configuration for Code-Index-MCP

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Coverage configuration
addopts = 
    --verbose
    --strict-markers
    --tb=short
    --cov=mcp_server
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
    --benchmark-disable
    -p no:warnings

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may require external resources)
    slow: Slow tests (>1s execution time)
    benchmark: Performance benchmark tests
    e2e: End-to-end tests
    requires_db: Tests that require database
    requires_network: Tests that require network access
    interface: Interface compliance tests
    plugin: Plugin-specific functionality tests
    performance: Performance validation tests
    resilience: Error handling and edge case tests
    security: Security-related tests

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout for tests (in seconds)
timeout = 300
timeout_method = thread

# Ignore patterns
norecursedirs = .git .tox dist build *.egg venv __pycache__ .pytest_cache

# Environment variables for tests
env = 
    MCP_TEST_MODE=1
    DATABASE_URL=sqlite:///:memory: