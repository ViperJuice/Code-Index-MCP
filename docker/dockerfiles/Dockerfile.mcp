# Dockerfile for MCP Server
FROM python:3.12-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    git \
    curl \
    libcurl4-openssl-dev \
    libffi-dev \
    libssl-dev \
    python3-dev \
    sqlite3 \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy dependency files first for better caching
COPY requirements.txt .
COPY pyproject.toml .
COPY setup.py* .

# Upgrade pip and install Python dependencies
RUN pip install --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt

# Install the package
RUN pip install -e .

# Copy application code
COPY mcp_server/ ./mcp_server/
COPY mcp_server_cli.py .
COPY plugins.yaml .
COPY .env* .

# Create necessary directories
RUN mkdir -p /app/data /app/logs /app/.mcp-index

# Copy existing database if available
COPY code_index.db* /app/
COPY .mcp-index/* /app/.mcp-index/ 2>/dev/null || true

# Set environment variables
ENV PYTHONPATH=/app
ENV MCP_WORKSPACE_ROOT=/app
ENV DATABASE_URL=sqlite:///./code_index.db

# Create a non-root user for security
RUN useradd -m -s /bin/bash mcp && \
    chown -R mcp:mcp /app

# Switch to non-root user
USER mcp

# Health check for MCP server
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import sys; sys.path.append('/app'); from mcp_server_cli import server; sys.exit(0 if server else 1)"

# Run the MCP server
CMD ["python", "mcp_server_cli.py"]
