name: Build and Publish Docker Images

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  schedule:
    # Nightly builds at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      push_images:
        description: 'Push images to registry'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        variant: [minimal, standard, full]
        platform: [linux/amd64, linux/arm64]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        if: github.event_name \!= 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor:  < /dev/null | 
            latest=auto
            suffix=-${{ matrix.variant }},onlatest=true
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=nightly,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/dockerfiles/Dockerfile.${{ matrix.variant }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name \!= 'pull_request' && (github.event.inputs.push_images \!= 'false' || github.event_name == 'push') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.variant }}-${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.variant }}-${{ matrix.platform }}
          build-args: |
            BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.meta.outputs.version }}
            VARIANT=${{ matrix.variant }}

  create-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name \!= 'pull_request'
    permissions:
      packages: write
    
    steps:
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create and push multi-arch manifests
        run: |
          # Create manifests for each variant
          for variant in minimal standard full; do
            docker manifest create \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-${variant} \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-${variant}-linux-amd64 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}-${variant}-linux-arm64
            
            docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-${variant}
          done

  security-scan:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name \!= 'pull_request'
    permissions:
      security-events: write
    strategy:
      matrix:
        variant: [minimal, standard, full]
    
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-${{ matrix.variant }}
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  update-dockerhub:
    needs: create-manifest
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: codeindexmcp/mcp-index
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ./docker/README.md
