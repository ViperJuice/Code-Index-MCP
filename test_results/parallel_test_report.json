{
  "execution_summary": {
    "total_duration_seconds": 2.1717517375946045,
    "total_groups": 3,
    "successful_groups": 0,
    "failed_groups": 3,
    "success_rate_percent": 0.0,
    "parallel_efficiency": 0.3349934207477767
  },
  "phases_summary": {
    "interface_compliance": {
      "total_groups": 3,
      "successful_groups": 0,
      "failed_groups": 3,
      "total_duration": 6.482968330383301,
      "average_duration": 2.1609894434611
    }
  },
  "detailed_results": [
    {
      "phase": "interface_compliance",
      "group": "shared_interfaces",
      "command": "pytest tests/test_shared_interfaces.py -n 4 --dist=loadfile --tb=short",
      "exit_code": 4,
      "duration_seconds": 2.1637983322143555,
      "stdout": "",
      "stderr": "2025-06-08 21:45:44 - mcp_server.core.logging - INFO - Logging initialized - Level: INFO, File: mcp_server.log\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: system\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: memory\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: disk\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized global business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized metrics middleware\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Added metrics middleware to FastAPI application\nImportError while loading conftest '/app/tests/conftest.py'.\ntests/conftest.py:22: in <module>\n    from mcp_server.gateway import app\nmcp_server/gateway.py:488: in <module>\n    @app.get(\"/symbol\", response_model=SymbolDef | None)\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:994: in decorator\n    self.add_api_route(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:933: in add_api_route\n    route = route_class(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:511: in __init__\n    self.response_field = create_model_field(\n/usr/local/lib/python3.11/site-packages/fastapi/utils.py:96: in create_model_field\n    return ModelField(**kwargs)  # type: ignore[arg-type]\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/_compat.py:111: in __post_init__\n    self._type_adapter: TypeAdapter[Any] = TypeAdapter(\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:257: in __init__\n    self._init_core_attrs(rebuild_mocks=False)\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:135: in wrapped\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:277: in _init_core_attrs\n    self._core_schema = _get_schema(self._type, config_wrapper, parent_depth=self._parent_depth)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:95: in _get_schema\n    schema = gen.generate_schema(type_)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:908: in _generate_schema_inner\n    return self._annotated_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2028: in _annotated_schema\n    schema = self._apply_annotations(source_type, annotations)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations\n    schema = get_inner_schema(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2189: in new_handler\n    schema = metadata_get_schema(source, get_inner_schema)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2185: in <lambda>\n    lambda source, handler: handler(source)\n                            ^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2088: in inner_handler\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1029: in match_type\n    return self._match_generic_type(obj, origin)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1058: in _match_generic_type\n    return self._union_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1378: in _union_schema\n    choices.append(self.generate_schema(arg))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:999: in match_type\n    return self._typed_dict_schema(obj, None)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1461: in _typed_dict_schema\n    raise PydanticUserError(\nE   pydantic.errors.PydanticUserError: Please use `typing_extensions.TypedDict` instead of `typing.TypedDict` on Python < 3.12.\nE\nE   For further information visit https://errors.pydantic.dev/2.9/u/typed-dict-version\n",
      "success": false
    },
    {
      "phase": "interface_compliance",
      "group": "plugin_interfaces",
      "command": "pytest tests/test_*_plugin.py::*InterfaceCompliance* -n 6 --dist=loadgroup --tb=short",
      "exit_code": 4,
      "duration_seconds": 2.1497445106506348,
      "stdout": "",
      "stderr": "2025-06-08 21:45:44 - mcp_server.core.logging - INFO - Logging initialized - Level: INFO, File: mcp_server.log\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: system\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: memory\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: disk\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized global business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized metrics middleware\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Added metrics middleware to FastAPI application\nImportError while loading conftest '/app/tests/conftest.py'.\ntests/conftest.py:22: in <module>\n    from mcp_server.gateway import app\nmcp_server/gateway.py:488: in <module>\n    @app.get(\"/symbol\", response_model=SymbolDef | None)\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:994: in decorator\n    self.add_api_route(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:933: in add_api_route\n    route = route_class(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:511: in __init__\n    self.response_field = create_model_field(\n/usr/local/lib/python3.11/site-packages/fastapi/utils.py:96: in create_model_field\n    return ModelField(**kwargs)  # type: ignore[arg-type]\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/_compat.py:111: in __post_init__\n    self._type_adapter: TypeAdapter[Any] = TypeAdapter(\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:257: in __init__\n    self._init_core_attrs(rebuild_mocks=False)\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:135: in wrapped\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:277: in _init_core_attrs\n    self._core_schema = _get_schema(self._type, config_wrapper, parent_depth=self._parent_depth)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:95: in _get_schema\n    schema = gen.generate_schema(type_)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:908: in _generate_schema_inner\n    return self._annotated_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2028: in _annotated_schema\n    schema = self._apply_annotations(source_type, annotations)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations\n    schema = get_inner_schema(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2189: in new_handler\n    schema = metadata_get_schema(source, get_inner_schema)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2185: in <lambda>\n    lambda source, handler: handler(source)\n                            ^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2088: in inner_handler\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1029: in match_type\n    return self._match_generic_type(obj, origin)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1058: in _match_generic_type\n    return self._union_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1378: in _union_schema\n    choices.append(self.generate_schema(arg))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:999: in match_type\n    return self._typed_dict_schema(obj, None)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1461: in _typed_dict_schema\n    raise PydanticUserError(\nE   pydantic.errors.PydanticUserError: Please use `typing_extensions.TypedDict` instead of `typing.TypedDict` on Python < 3.12.\nE\nE   For further information visit https://errors.pydantic.dev/2.9/u/typed-dict-version\n",
      "success": false
    },
    {
      "phase": "interface_compliance",
      "group": "storage_interfaces",
      "command": "pytest tests/test_sqlite_store.py -n 3 --dist=loadfile --tb=short",
      "exit_code": 4,
      "duration_seconds": 2.1694254875183105,
      "stdout": "",
      "stderr": "2025-06-08 21:45:44 - mcp_server.core.logging - INFO - Logging initialized - Level: INFO, File: mcp_server.log\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: system\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: memory\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: disk\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized global business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized metrics middleware\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Added metrics middleware to FastAPI application\nImportError while loading conftest '/app/tests/conftest.py'.\ntests/conftest.py:22: in <module>\n    from mcp_server.gateway import app\nmcp_server/gateway.py:488: in <module>\n    @app.get(\"/symbol\", response_model=SymbolDef | None)\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:994: in decorator\n    self.add_api_route(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:933: in add_api_route\n    route = route_class(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:511: in __init__\n    self.response_field = create_model_field(\n/usr/local/lib/python3.11/site-packages/fastapi/utils.py:96: in create_model_field\n    return ModelField(**kwargs)  # type: ignore[arg-type]\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/_compat.py:111: in __post_init__\n    self._type_adapter: TypeAdapter[Any] = TypeAdapter(\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:257: in __init__\n    self._init_core_attrs(rebuild_mocks=False)\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:135: in wrapped\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:277: in _init_core_attrs\n    self._core_schema = _get_schema(self._type, config_wrapper, parent_depth=self._parent_depth)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:95: in _get_schema\n    schema = gen.generate_schema(type_)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:908: in _generate_schema_inner\n    return self._annotated_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2028: in _annotated_schema\n    schema = self._apply_annotations(source_type, annotations)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations\n    schema = get_inner_schema(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2189: in new_handler\n    schema = metadata_get_schema(source, get_inner_schema)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2185: in <lambda>\n    lambda source, handler: handler(source)\n                            ^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2088: in inner_handler\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1029: in match_type\n    return self._match_generic_type(obj, origin)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1058: in _match_generic_type\n    return self._union_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1378: in _union_schema\n    choices.append(self.generate_schema(arg))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:999: in match_type\n    return self._typed_dict_schema(obj, None)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1461: in _typed_dict_schema\n    raise PydanticUserError(\nE   pydantic.errors.PydanticUserError: Please use `typing_extensions.TypedDict` instead of `typing.TypedDict` on Python < 3.12.\nE\nE   For further information visit https://errors.pydantic.dev/2.9/u/typed-dict-version\n",
      "success": false
    }
  ],
  "failed_tests": [
    {
      "phase": "interface_compliance",
      "group": "shared_interfaces",
      "command": "pytest tests/test_shared_interfaces.py -n 4 --dist=loadfile --tb=short",
      "exit_code": 4,
      "duration_seconds": 2.1637983322143555,
      "stdout": "",
      "stderr": "2025-06-08 21:45:44 - mcp_server.core.logging - INFO - Logging initialized - Level: INFO, File: mcp_server.log\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: system\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: memory\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: disk\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized global business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized metrics middleware\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Added metrics middleware to FastAPI application\nImportError while loading conftest '/app/tests/conftest.py'.\ntests/conftest.py:22: in <module>\n    from mcp_server.gateway import app\nmcp_server/gateway.py:488: in <module>\n    @app.get(\"/symbol\", response_model=SymbolDef | None)\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:994: in decorator\n    self.add_api_route(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:933: in add_api_route\n    route = route_class(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:511: in __init__\n    self.response_field = create_model_field(\n/usr/local/lib/python3.11/site-packages/fastapi/utils.py:96: in create_model_field\n    return ModelField(**kwargs)  # type: ignore[arg-type]\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/_compat.py:111: in __post_init__\n    self._type_adapter: TypeAdapter[Any] = TypeAdapter(\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:257: in __init__\n    self._init_core_attrs(rebuild_mocks=False)\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:135: in wrapped\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:277: in _init_core_attrs\n    self._core_schema = _get_schema(self._type, config_wrapper, parent_depth=self._parent_depth)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:95: in _get_schema\n    schema = gen.generate_schema(type_)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:908: in _generate_schema_inner\n    return self._annotated_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2028: in _annotated_schema\n    schema = self._apply_annotations(source_type, annotations)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations\n    schema = get_inner_schema(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2189: in new_handler\n    schema = metadata_get_schema(source, get_inner_schema)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2185: in <lambda>\n    lambda source, handler: handler(source)\n                            ^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2088: in inner_handler\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1029: in match_type\n    return self._match_generic_type(obj, origin)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1058: in _match_generic_type\n    return self._union_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1378: in _union_schema\n    choices.append(self.generate_schema(arg))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:999: in match_type\n    return self._typed_dict_schema(obj, None)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1461: in _typed_dict_schema\n    raise PydanticUserError(\nE   pydantic.errors.PydanticUserError: Please use `typing_extensions.TypedDict` instead of `typing.TypedDict` on Python < 3.12.\nE\nE   For further information visit https://errors.pydantic.dev/2.9/u/typed-dict-version\n",
      "success": false
    },
    {
      "phase": "interface_compliance",
      "group": "plugin_interfaces",
      "command": "pytest tests/test_*_plugin.py::*InterfaceCompliance* -n 6 --dist=loadgroup --tb=short",
      "exit_code": 4,
      "duration_seconds": 2.1497445106506348,
      "stdout": "",
      "stderr": "2025-06-08 21:45:44 - mcp_server.core.logging - INFO - Logging initialized - Level: INFO, File: mcp_server.log\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: system\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: memory\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: disk\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized global business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized metrics middleware\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Added metrics middleware to FastAPI application\nImportError while loading conftest '/app/tests/conftest.py'.\ntests/conftest.py:22: in <module>\n    from mcp_server.gateway import app\nmcp_server/gateway.py:488: in <module>\n    @app.get(\"/symbol\", response_model=SymbolDef | None)\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:994: in decorator\n    self.add_api_route(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:933: in add_api_route\n    route = route_class(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:511: in __init__\n    self.response_field = create_model_field(\n/usr/local/lib/python3.11/site-packages/fastapi/utils.py:96: in create_model_field\n    return ModelField(**kwargs)  # type: ignore[arg-type]\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/_compat.py:111: in __post_init__\n    self._type_adapter: TypeAdapter[Any] = TypeAdapter(\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:257: in __init__\n    self._init_core_attrs(rebuild_mocks=False)\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:135: in wrapped\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:277: in _init_core_attrs\n    self._core_schema = _get_schema(self._type, config_wrapper, parent_depth=self._parent_depth)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:95: in _get_schema\n    schema = gen.generate_schema(type_)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:908: in _generate_schema_inner\n    return self._annotated_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2028: in _annotated_schema\n    schema = self._apply_annotations(source_type, annotations)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations\n    schema = get_inner_schema(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2189: in new_handler\n    schema = metadata_get_schema(source, get_inner_schema)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2185: in <lambda>\n    lambda source, handler: handler(source)\n                            ^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2088: in inner_handler\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1029: in match_type\n    return self._match_generic_type(obj, origin)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1058: in _match_generic_type\n    return self._union_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1378: in _union_schema\n    choices.append(self.generate_schema(arg))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:999: in match_type\n    return self._typed_dict_schema(obj, None)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1461: in _typed_dict_schema\n    raise PydanticUserError(\nE   pydantic.errors.PydanticUserError: Please use `typing_extensions.TypedDict` instead of `typing.TypedDict` on Python < 3.12.\nE\nE   For further information visit https://errors.pydantic.dev/2.9/u/typed-dict-version\n",
      "success": false
    },
    {
      "phase": "interface_compliance",
      "group": "storage_interfaces",
      "command": "pytest tests/test_sqlite_store.py -n 3 --dist=loadfile --tb=short",
      "exit_code": 4,
      "duration_seconds": 2.1694254875183105,
      "stdout": "",
      "stderr": "2025-06-08 21:45:44 - mcp_server.core.logging - INFO - Logging initialized - Level: INFO, File: mcp_server.log\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: system\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: memory\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: disk\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized global business metrics collector\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized metrics middleware\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Added metrics middleware to FastAPI application\nImportError while loading conftest '/app/tests/conftest.py'.\ntests/conftest.py:22: in <module>\n    from mcp_server.gateway import app\nmcp_server/gateway.py:488: in <module>\n    @app.get(\"/symbol\", response_model=SymbolDef | None)\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:994: in decorator\n    self.add_api_route(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:933: in add_api_route\n    route = route_class(\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:511: in __init__\n    self.response_field = create_model_field(\n/usr/local/lib/python3.11/site-packages/fastapi/utils.py:96: in create_model_field\n    return ModelField(**kwargs)  # type: ignore[arg-type]\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/fastapi/_compat.py:111: in __post_init__\n    self._type_adapter: TypeAdapter[Any] = TypeAdapter(\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:257: in __init__\n    self._init_core_attrs(rebuild_mocks=False)\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:135: in wrapped\n    return func(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:277: in _init_core_attrs\n    self._core_schema = _get_schema(self._type, config_wrapper, parent_depth=self._parent_depth)\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:95: in _get_schema\n    schema = gen.generate_schema(type_)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:908: in _generate_schema_inner\n    return self._annotated_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2028: in _annotated_schema\n    schema = self._apply_annotations(source_type, annotations)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations\n    schema = get_inner_schema(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2189: in new_handler\n    schema = metadata_get_schema(source, get_inner_schema)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2185: in <lambda>\n    lambda source, handler: handler(source)\n                            ^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\n    schema = self._handler(source_type)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2088: in inner_handler\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1029: in match_type\n    return self._match_generic_type(obj, origin)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1058: in _match_generic_type\n    return self._union_schema(obj)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1378: in _union_schema\n    choices.append(self.generate_schema(arg))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\n    schema = self._generate_schema_inner(obj)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\n    return self.match_type(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:999: in match_type\n    return self._typed_dict_schema(obj, None)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1461: in _typed_dict_schema\n    raise PydanticUserError(\nE   pydantic.errors.PydanticUserError: Please use `typing_extensions.TypedDict` instead of `typing.TypedDict` on Python < 3.12.\nE\nE   For further information visit https://errors.pydantic.dev/2.9/u/typed-dict-version\n",
      "success": false
    }
  ],
  "performance_metrics": {
    "fastest_group": "TestResult(phase='interface_compliance', group='plugin_interfaces', command='pytest tests/test_*_plugin.py::*InterfaceCompliance* -n 6 --dist=loadgroup --tb=short', exit_code=4, duration_seconds=2.1497445106506348, stdout='', stderr='2025-06-08 21:45:44 - mcp_server.core.logging - INFO - Logging initialized - Level: INFO, File: mcp_server.log\\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: system\\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: memory\\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: disk\\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized business metrics collector\\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized global business metrics collector\\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized metrics middleware\\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Added metrics middleware to FastAPI application\\nImportError while loading conftest \\'/app/tests/conftest.py\\'.\\ntests/conftest.py:22: in <module>\\n    from mcp_server.gateway import app\\nmcp_server/gateway.py:488: in <module>\\n    @app.get(\"/symbol\", response_model=SymbolDef | None)\\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:994: in decorator\\n    self.add_api_route(\\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:933: in add_api_route\\n    route = route_class(\\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:511: in __init__\\n    self.response_field = create_model_field(\\n/usr/local/lib/python3.11/site-packages/fastapi/utils.py:96: in create_model_field\\n    return ModelField(**kwargs)  # type: ignore[arg-type]\\n           ^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/fastapi/_compat.py:111: in __post_init__\\n    self._type_adapter: TypeAdapter[Any] = TypeAdapter(\\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:257: in __init__\\n    self._init_core_attrs(rebuild_mocks=False)\\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:135: in wrapped\\n    return func(self, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:277: in _init_core_attrs\\n    self._core_schema = _get_schema(self._type, config_wrapper, parent_depth=self._parent_depth)\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:95: in _get_schema\\n    schema = gen.generate_schema(type_)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\\n    schema = self._generate_schema_inner(obj)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:908: in _generate_schema_inner\\n    return self._annotated_schema(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2028: in _annotated_schema\\n    schema = self._apply_annotations(source_type, annotations)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations\\n    schema = get_inner_schema(source_type)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\\n    schema = self._handler(source_type)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2189: in new_handler\\n    schema = metadata_get_schema(source, get_inner_schema)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2185: in <lambda>\\n    lambda source, handler: handler(source)\\n                            ^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\\n    schema = self._handler(source_type)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2088: in inner_handler\\n    schema = self._generate_schema_inner(obj)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\\n    return self.match_type(obj)\\n           ^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1029: in match_type\\n    return self._match_generic_type(obj, origin)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1058: in _match_generic_type\\n    return self._union_schema(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1378: in _union_schema\\n    choices.append(self.generate_schema(arg))\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\\n    schema = self._generate_schema_inner(obj)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\\n    return self.match_type(obj)\\n           ^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:999: in match_type\\n    return self._typed_dict_schema(obj, None)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1461: in _typed_dict_schema\\n    raise PydanticUserError(\\nE   pydantic.errors.PydanticUserError: Please use `typing_extensions.TypedDict` instead of `typing.TypedDict` on Python < 3.12.\\nE\\nE   For further information visit https://errors.pydantic.dev/2.9/u/typed-dict-version\\n', success=False)",
    "slowest_group": "TestResult(phase='interface_compliance', group='storage_interfaces', command='pytest tests/test_sqlite_store.py -n 3 --dist=loadfile --tb=short', exit_code=4, duration_seconds=2.1694254875183105, stdout='', stderr='2025-06-08 21:45:44 - mcp_server.core.logging - INFO - Logging initialized - Level: INFO, File: mcp_server.log\\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: system\\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: memory\\n2025-06-08 21:45:44 - mcp_server.metrics.health_check - INFO - Registered health check for component: disk\\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized business metrics collector\\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized global business metrics collector\\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Initialized metrics middleware\\n2025-06-08 21:45:44 - mcp_server.metrics.middleware - INFO - Added metrics middleware to FastAPI application\\nImportError while loading conftest \\'/app/tests/conftest.py\\'.\\ntests/conftest.py:22: in <module>\\n    from mcp_server.gateway import app\\nmcp_server/gateway.py:488: in <module>\\n    @app.get(\"/symbol\", response_model=SymbolDef | None)\\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:994: in decorator\\n    self.add_api_route(\\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:933: in add_api_route\\n    route = route_class(\\n/usr/local/lib/python3.11/site-packages/fastapi/routing.py:511: in __init__\\n    self.response_field = create_model_field(\\n/usr/local/lib/python3.11/site-packages/fastapi/utils.py:96: in create_model_field\\n    return ModelField(**kwargs)  # type: ignore[arg-type]\\n           ^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/fastapi/_compat.py:111: in __post_init__\\n    self._type_adapter: TypeAdapter[Any] = TypeAdapter(\\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:257: in __init__\\n    self._init_core_attrs(rebuild_mocks=False)\\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:135: in wrapped\\n    return func(self, *args, **kwargs)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:277: in _init_core_attrs\\n    self._core_schema = _get_schema(self._type, config_wrapper, parent_depth=self._parent_depth)\\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/type_adapter.py:95: in _get_schema\\n    schema = gen.generate_schema(type_)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\\n    schema = self._generate_schema_inner(obj)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:908: in _generate_schema_inner\\n    return self._annotated_schema(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2028: in _annotated_schema\\n    schema = self._apply_annotations(source_type, annotations)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2107: in _apply_annotations\\n    schema = get_inner_schema(source_type)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\\n    schema = self._handler(source_type)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2189: in new_handler\\n    schema = metadata_get_schema(source, get_inner_schema)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2185: in <lambda>\\n    lambda source, handler: handler(source)\\n                            ^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_schema_generation_shared.py:83: in __call__\\n    schema = self._handler(source_type)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:2088: in inner_handler\\n    schema = self._generate_schema_inner(obj)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\\n    return self.match_type(obj)\\n           ^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1029: in match_type\\n    return self._match_generic_type(obj, origin)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1058: in _match_generic_type\\n    return self._union_schema(obj)\\n           ^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1378: in _union_schema\\n    choices.append(self.generate_schema(arg))\\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:655: in generate_schema\\n    schema = self._generate_schema_inner(obj)\\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:929: in _generate_schema_inner\\n    return self.match_type(obj)\\n           ^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:999: in match_type\\n    return self._typed_dict_schema(obj, None)\\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n/usr/local/lib/python3.11/site-packages/pydantic/_internal/_generate_schema.py:1461: in _typed_dict_schema\\n    raise PydanticUserError(\\nE   pydantic.errors.PydanticUserError: Please use `typing_extensions.TypedDict` instead of `typing.TypedDict` on Python < 3.12.\\nE\\nE   For further information visit https://errors.pydantic.dev/2.9/u/typed-dict-version\\n', success=False)",
    "total_test_time": 6.482968330383301
  }
}