[
  {
    "test_id": "python_django_3_mcp",
    "mode": "mcp",
    "query": "Find all FIXME or BUG comments",
    "category": "content",
    "prompt": "You are testing MCP tools for performance analysis.\n\nRepository: python_django (python)\nQuery: Find all FIXME or BUG comments\nCategory: content\n\nInstructions:\n1. Use ONLY MCP tools (mcp__code-index-mcp__symbol_lookup, mcp__code-index-mcp__search_code)\n2. Time your query execution\n3. Count results found\n4. Track tool calls made\n5. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Find all FIXME or BUG comments\",\n  \"mode\": \"mcp\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_3_native",
    "mode": "native",
    "query": "Find all FIXME or BUG comments",
    "category": "content",
    "prompt": "You are testing native tools for performance analysis.\n\nRepository: python_django (python)\nWorking Directory: /workspaces/Code-Index-MCP/test_repos/web/python/django\nQuery: Find all FIXME or BUG comments\nCategory: content\n\nInstructions:\n1. Use ONLY native tools (grep, find, glob, ls, read)\n2. NO MCP tools allowed\n3. Time your query execution\n4. Count results found\n5. Track tool calls made\n6. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Find all FIXME or BUG comments\",\n  \"mode\": \"native\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_4_mcp",
    "mode": "mcp",
    "query": "Find all files importing core",
    "category": "navigation",
    "prompt": "You are testing MCP tools for performance analysis.\n\nRepository: python_django (python)\nQuery: Find all files importing core\nCategory: navigation\n\nInstructions:\n1. Use ONLY MCP tools (mcp__code-index-mcp__symbol_lookup, mcp__code-index-mcp__search_code)\n2. Time your query execution\n3. Count results found\n4. Track tool calls made\n5. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Find all files importing core\",\n  \"mode\": \"mcp\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_4_native",
    "mode": "native",
    "query": "Find all files importing core",
    "category": "navigation",
    "prompt": "You are testing native tools for performance analysis.\n\nRepository: python_django (python)\nWorking Directory: /workspaces/Code-Index-MCP/test_repos/web/python/django\nQuery: Find all files importing core\nCategory: navigation\n\nInstructions:\n1. Use ONLY native tools (grep, find, glob, ls, read)\n2. NO MCP tools allowed\n3. Time your query execution\n4. Count results found\n5. Track tool calls made\n6. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Find all files importing core\",\n  \"mode\": \"native\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_5_mcp",
    "mode": "mcp",
    "query": "Show files that depend on requests",
    "category": "navigation",
    "prompt": "You are testing MCP tools for performance analysis.\n\nRepository: python_django (python)\nQuery: Show files that depend on requests\nCategory: navigation\n\nInstructions:\n1. Use ONLY MCP tools (mcp__code-index-mcp__symbol_lookup, mcp__code-index-mcp__search_code)\n2. Time your query execution\n3. Count results found\n4. Track tool calls made\n5. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Show files that depend on requests\",\n  \"mode\": \"mcp\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_5_native",
    "mode": "native",
    "query": "Show files that depend on requests",
    "category": "navigation",
    "prompt": "You are testing native tools for performance analysis.\n\nRepository: python_django (python)\nWorking Directory: /workspaces/Code-Index-MCP/test_repos/web/python/django\nQuery: Show files that depend on requests\nCategory: navigation\n\nInstructions:\n1. Use ONLY native tools (grep, find, glob, ls, read)\n2. NO MCP tools allowed\n3. Time your query execution\n4. Count results found\n5. Track tool calls made\n6. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Show files that depend on requests\",\n  \"mode\": \"native\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_6_mcp",
    "mode": "mcp",
    "query": "Find all usages of Handler",
    "category": "refactoring",
    "prompt": "You are testing MCP tools for performance analysis.\n\nRepository: python_django (python)\nQuery: Find all usages of Handler\nCategory: refactoring\n\nInstructions:\n1. Use ONLY MCP tools (mcp__code-index-mcp__symbol_lookup, mcp__code-index-mcp__search_code)\n2. Time your query execution\n3. Count results found\n4. Track tool calls made\n5. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Find all usages of Handler\",\n  \"mode\": \"mcp\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_6_native",
    "mode": "native",
    "query": "Find all usages of Handler",
    "category": "refactoring",
    "prompt": "You are testing native tools for performance analysis.\n\nRepository: python_django (python)\nWorking Directory: /workspaces/Code-Index-MCP/test_repos/web/python/django\nQuery: Find all usages of Handler\nCategory: refactoring\n\nInstructions:\n1. Use ONLY native tools (grep, find, glob, ls, read)\n2. NO MCP tools allowed\n3. Time your query execution\n4. Count results found\n5. Track tool calls made\n6. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Find all usages of Handler\",\n  \"mode\": \"native\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_7_mcp",
    "mode": "mcp",
    "query": "Show all references to RequestHandler",
    "category": "refactoring",
    "prompt": "You are testing MCP tools for performance analysis.\n\nRepository: python_django (python)\nQuery: Show all references to RequestHandler\nCategory: refactoring\n\nInstructions:\n1. Use ONLY MCP tools (mcp__code-index-mcp__symbol_lookup, mcp__code-index-mcp__search_code)\n2. Time your query execution\n3. Count results found\n4. Track tool calls made\n5. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Show all references to RequestHandler\",\n  \"mode\": \"mcp\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_7_native",
    "mode": "native",
    "query": "Show all references to RequestHandler",
    "category": "refactoring",
    "prompt": "You are testing native tools for performance analysis.\n\nRepository: python_django (python)\nWorking Directory: /workspaces/Code-Index-MCP/test_repos/web/python/django\nQuery: Show all references to RequestHandler\nCategory: refactoring\n\nInstructions:\n1. Use ONLY native tools (grep, find, glob, ls, read)\n2. NO MCP tools allowed\n3. Time your query execution\n4. Count results found\n5. Track tool calls made\n6. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Show all references to RequestHandler\",\n  \"mode\": \"native\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_8_mcp",
    "mode": "mcp",
    "query": "Explain how authentication works",
    "category": "understanding",
    "prompt": "You are testing MCP tools for performance analysis.\n\nRepository: python_django (python)\nQuery: Explain how authentication works\nCategory: understanding\n\nInstructions:\n1. Use ONLY MCP tools (mcp__code-index-mcp__symbol_lookup, mcp__code-index-mcp__search_code)\n2. Time your query execution\n3. Count results found\n4. Track tool calls made\n5. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Explain how authentication works\",\n  \"mode\": \"mcp\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_8_native",
    "mode": "native",
    "query": "Explain how authentication works",
    "category": "understanding",
    "prompt": "You are testing native tools for performance analysis.\n\nRepository: python_django (python)\nWorking Directory: /workspaces/Code-Index-MCP/test_repos/web/python/django\nQuery: Explain how authentication works\nCategory: understanding\n\nInstructions:\n1. Use ONLY native tools (grep, find, glob, ls, read)\n2. NO MCP tools allowed\n3. Time your query execution\n4. Count results found\n5. Track tool calls made\n6. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Explain how authentication works\",\n  \"mode\": \"native\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_9_mcp",
    "mode": "mcp",
    "query": "Show the flow of request_handling",
    "category": "understanding",
    "prompt": "You are testing MCP tools for performance analysis.\n\nRepository: python_django (python)\nQuery: Show the flow of request_handling\nCategory: understanding\n\nInstructions:\n1. Use ONLY MCP tools (mcp__code-index-mcp__symbol_lookup, mcp__code-index-mcp__search_code)\n2. Time your query execution\n3. Count results found\n4. Track tool calls made\n5. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Show the flow of request_handling\",\n  \"mode\": \"mcp\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  },
  {
    "test_id": "python_django_9_native",
    "mode": "native",
    "query": "Show the flow of request_handling",
    "category": "understanding",
    "prompt": "You are testing native tools for performance analysis.\n\nRepository: python_django (python)\nWorking Directory: /workspaces/Code-Index-MCP/test_repos/web/python/django\nQuery: Show the flow of request_handling\nCategory: understanding\n\nInstructions:\n1. Use ONLY native tools (grep, find, glob, ls, read)\n2. NO MCP tools allowed\n3. Time your query execution\n4. Count results found\n5. Track tool calls made\n6. Estimate tokens used\n\nOutput JSON only:\n```json\n{\n  \"query\": \"Show the flow of request_handling\",\n  \"mode\": \"native\",\n  \"tools_used\": [\"list\", \"of\", \"tools\"],\n  \"tool_calls\": {\"tool_name\": count},\n  \"results_found\": number,\n  \"execution_time_ms\": milliseconds,\n  \"token_estimate\": number,\n  \"success\": true/false,\n  \"error\": null_or_string\n}\n```"
  }
]