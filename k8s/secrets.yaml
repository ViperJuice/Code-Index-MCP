# Secrets for MCP Server (base64 encoded)
# IMPORTANT: Replace all values with your actual base64-encoded secrets
apiVersion: v1
kind: Secret
metadata:
  name: mcp-server-secrets
  namespace: mcp-server
type: Opaque
data:
  # Database URL (replace with your actual base64-encoded database URL)
  # Example: echo -n "postgresql://user:pass@host:5432/db" | base64
  DATABASE_URL: cG9zdGdyZXNxbDovL21jcF91c2VyOnBhc3N3b3JkQHBvc3RncmVzOjU0MzIvbWNwX3Byb2R1Y3Rpb24=
  
  # JWT Secret Key (replace with your actual base64-encoded secret)
  # Generate with: python -c "import secrets, base64; print(base64.b64encode(secrets.token_urlsafe(32).encode()).decode())"
  JWT_SECRET_KEY: WU9VUl9TRUNVUkVfSldUX1NFQ1JFVF9LRVlfSEVSRQ==
  
  # Admin credentials (replace with your actual base64-encoded values)
  # Example: echo -n "admin@yourdomain.com" | base64
  DEFAULT_ADMIN_EMAIL: YWRtaW5AeW91cmRvbWFpbi5jb20=
  # Example: echo -n "your-secure-password" | base64
  DEFAULT_ADMIN_PASSWORD: WU9VUl9TRUNVUkVfUEFTU1dPUkQ=
  
  # Redis URL (replace with your actual base64-encoded Redis URL)
  # Example: echo -n "redis://redis:6379" | base64
  REDIS_URL: cmVkaXM6Ly9yZWRpczozNjM3OQ==
  
  # CORS allowed origins (replace with your actual domains)
  # Example: echo -n "https://yourdomain.com,https://api.yourdomain.com" | base64
  CORS_ALLOWED_ORIGINS: aHR0cHM6Ly95b3VyZG9tYWluLmNvbSxodHRwczovL2FwaS55b3VyZG9tYWluLmNvbQ==

---
# TLS Secret for ingress (if using cert-manager)
apiVersion: v1
kind: Secret
metadata:
  name: mcp-server-tls
  namespace: mcp-server
type: kubernetes.io/tls
data:
  # Replace with your actual TLS certificate and key (base64 encoded)
  # These would typically be managed by cert-manager automatically
  tls.crt: LS0tLS1CRUdJTi... # Your certificate here
  tls.key: LS0tLS1CRUdJTi... # Your private key here